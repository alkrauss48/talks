OKC WebDevs

<insert logo>

What are we?

Anything Web Dev

HTML / CSS
JavaScript
Python
Ruby
PHP
Ruby
.NET

As well as:
* Software dev
* Game dev
* Anything dev

We Meet
* 3rd Tuesday of the month
* 11:30am - 12:30pm
* StarSpace46

@images/meetup.png

How to GraphQL

By:
     Aaron Krauss

\@thecodeboss

@images/clevyr.png

@images/techlahoma.png

@images/code-org.png

https://code.org/volunteer

What is GraphQL?

@images/graphql.png

GraphQL is an open-source data query and
manipulation language for APIs, and a
runtime for fulfilling queries with existing data.

My definition

GraphQL makes querying data much simpler
by allowing the client to control querying
the data that it needs.

It's also really simple
once you have it set up

GraphQL is language agnostic

GraphQL is database/service agnostic

@images/graphql-agnostic.png

GraphQL itself is just a spec
Not the implementation itself

Important Dates

* Protocol built internally by Facebook in 2012
* Released to public in 2015
* Moved from FB to GraphQL Foundation in 2018

2 Key Concepts

1. GraphQL enables
declarative data fetching

2. GraphQL exposes a single endpoint

Endpoint is a POST request

3 Things You Can Do with GraphQL

aka Operation Types

* Queries
* Mutations
* Subscriptions

Why GraphQL Over REST?

1. Solves overfetching and underfetching

Important for increased mobile usage

2. Development speed increase

3. Variety of front-end frameworks

What Companies Use GraphQL?

@images/companies.png

Plan:
* Ruby on Rails
* PostgreSQL
* GraphQL

Explore:
* Queries
* Mutations

Data:
A User has many Items

Demo

0. Set up the project

1. Install GraphQL library

2. Getting to GraphQL Logic

3. Create Schema file

4. Create Types

5. Test a Query

6. Write Mutations

My big question over mutations:

Can you do side effects?

7. Test a Mutation

8. Apollo Client

What comes after GraphQL?

(Opinions following)

An interesting pattern
in server architecture

GraphQL solved issues with REST

REST == close to the minimal core HTTP Rules

It's relatively minimal and flexible

GraphQL is a spec for a system that
revolves around a strong server tool

We've kind of done this before

Before REST:
* SOAP

SOAP is a also spec for a system that
revolves around a strong server "tool"

Before SOAP:
* RPC

RPC had more structure than REST,
but was largely pretty simple

Will the next thing deem
GraphQL as too complicated?

idk

(End Opinions)

More Info
howtographql.com

GraphQL with .NET
OKC-Sharp
Monday, March 2nd

Next OKCWebDevs Talk
Tuesday, March 17th
(St. Patricks' Day)

Microservices using NestJs
Stephen Vincent

thanks
* Aaron Krauss
* thecodeboss.dev

clevyr
clevyr.com

OKC WebDevs logo

questions?
