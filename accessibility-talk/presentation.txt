Accessibility for the Web

(From a developer's perspective)

By:
     Aaron Krauss

\@thecodeboss

@images/clevyr.png

@images/techlahoma.png

@images/code-org.png

https://code.org/volunteer

Developer Code of Ethics

1) Even if you don't have to - or even want to - you always
must deviate from the original design.

2) At least once, say "we can't do that", or even better, "I'm not going to do
that."

3) Get the project 80% close to the original design. After that, just say
everything will take too much time - even if it won't.

4) Never admit that you don't know something - just say it's impossible,
even if there are plenty of websites that already do it.

Developer Code of Ethics

What is Accessibility?

Accessibility is giving a f*ck about people

All people

That includes users with disabilities

And also users with no disabilities at all

Main Concept

Building an accessible web site
makes your website better overall

* More usage (and thus popularity)
* Better SEO
* Better design architecture
* Better code architecture

And all of that usually means more $$$

It also may be required

Section 508

Some housekeeping...

Don't say "disabled users"

Say "users with disabilities"

Types of Disabilities

* Visual
* Auditory
* Motor
* Cognitive

Visual Concerns

* Screen readers
* "Focus" indicators
* Color-blindness
* Contrast
* Z-scan
* Open Graph

Screen readers

ChromeVox Chrome

Accessibility tree

@images/accessibility-tree.png

Accessibility tree vs DOM tree

Tips for maximizing screen reader usage:

* Use Semantic HTML
  * Such as <section>,<article>,
    <aside>,<nav>, etc.

* Image alt tags

* Title tags for non-image icons

* ARIA roles

You can help by:
* Telling the developer what an image's alt text should be
* Ensuring the developer knows how everything interacts

Focus Indicators

Color-blindness

NoCoffee Chrome Plugin

Contrast

Z-scan

Open Graph

Users donâ€™t read web pages,
they scan.

First, people scan from the top left to the top right, forming a horizontal line

Next, down and to the left side of the page, creating a diagonal line

Last, back across to the right again, forming a second horizontal line

Auditory Concerns

For Media:

* Subtitles
* Volume controls
* Ideally default to a "muted" state

For supplemental audio:
* Visual cues
* Nothing absurd (i.e. loud, lengthy, confusing)

Motor Concerns

* Responsive Applications
* Skip menus
* Tab flow
* "Submit" actions
* "Cancel" actions

Responsive Applications

Skip menus

Tab flow

"Submit" actions

"Cancel" actions

Cognitive Concerns

* Good content
* Well-thought-out workflows
* "Panic" mode

Good Content

* Labels
* Titles / Headings
* Call to Actions

Well thought-out workflows

* Analyze multiple users' perspectives
* Build wireframes (and give them to the dev)

"Panic" mode

Think websites like:
* Hospitals
* Schools
* Local News / Weather

Make a few things incredibly simple

References

* Section 508: https://www.epa.gov/accessibility/what-section-508
* ChromeVox Plugin: https://chrome.google.com/webstore/detail/chromevox/kgejglhpjiefppelpmljglcjbhoiplfn?hl=en
* Z-Scan: https://uxplanet.org/z-shaped-pattern-for-reading-web-content-ce1135f92f1c
* Skip Menu Code: https://gist.github.com/alkrauss48/dc8e010a59d5e2df1666
* ARIA Roles and Attributes: https://thecodeboss.dev/2016/09/aria-roles-and-attributes-how-to-actually-use-them/
* Developing for Accessibility: https://thecodeboss.dev/2014/07/developing-for-accessibility/
* NoCoffee Chrome Plugin: https://chrome.google.com/webstore/detail/nocoffee/jjeeggmbnhckmgdhmgdckeigabjfbddl?hl=en-US
* Contrast Test: https://webaim.org/resources/contrastchecker/
* Meta Tags: https://thecodeboss.dev/2016/12/what-meta-tags-your-site-should-be-using/

thanks
* @thecodeboss
* thecodeboss.dev

clevyr
clevyr.com

https://thesocietea.org/blog

questions?
